{"version":3,"file":"worker.js","sources":["../../dist/token.js","../../dist/expr.js","../../dist/parser.js","../../dist/compiler.js","../../dist/scanner.js","../src/worker.ts"],"sourcesContent":["export const Token = {\r\n    FORWARD: \"FORWARD\",\r\n    RIGHT: \"RIGHT\",\r\n    LEFT: \"LEFT\",\r\n    LITERAL: \"LITERAL\",\r\n    REPEAT: \"REPEAT\",\r\n    OB: \"OB\",\r\n    CB: \"CB\",\r\n    ERROR: \"ERROR\",\r\n    EOF: \"EOF\",\r\n};\r\n","export class Forward {\r\n    constructor(distance) {\r\n        this.distance = distance;\r\n    }\r\n    accept(visitor) {\r\n        return visitor.visitForwardExpr(this);\r\n    }\r\n}\r\nexport class Right {\r\n    constructor(distance) {\r\n        this.distance = distance;\r\n    }\r\n    accept(visitor) {\r\n        return visitor.visitRightExpr(this);\r\n    }\r\n}\r\nexport class Left {\r\n    constructor(distance) {\r\n        this.distance = distance;\r\n    }\r\n    accept(visitor) {\r\n        return visitor.visitLeftExpr(this);\r\n    }\r\n}\r\nexport class Literal {\r\n    constructor(token) {\r\n        this.value = token.value;\r\n    }\r\n    accept(visitor) {\r\n        return visitor.visitLiteralExpr(this);\r\n    }\r\n}\r\nexport class Repeat {\r\n    constructor(times, movements) {\r\n        this.times = times;\r\n        this.movements = movements;\r\n    }\r\n    accept(visitor) {\r\n        return visitor.visitRepeatExpr(this);\r\n    }\r\n}\r\n","import { Token } from \"./token.js\";\r\nimport * as Expr from \"./expr.js\";\r\nexport class Parser {\r\n    constructor(scanner) {\r\n        this.scanner = scanner;\r\n        this.current = this.scanner.next().value;\r\n        this.previous = null;\r\n    }\r\n    repeat() {\r\n        const times = this.literal();\r\n        const movements = [];\r\n        this.consume(Token.OB, `Expected a '(' ${JSON.stringify(this.current)}`);\r\n        while (!this.check(Token.CB)) {\r\n            movements.push(this.command());\r\n        }\r\n        this.consume(Token.CB, `Expected a ')' `);\r\n        return new Expr.Repeat(times, movements);\r\n    }\r\n    literal() {\r\n        if (this.check(Token.LITERAL)) {\r\n            return new Expr.Literal(this.advance());\r\n        }\r\n        throw new Error(`Expected literal: ${JSON.stringify(this.current)}`);\r\n    }\r\n    motion() {\r\n        if (this.match(Token.FORWARD)) {\r\n            return new Expr.Forward(this.literal());\r\n        }\r\n        if (this.match(Token.LEFT)) {\r\n            return new Expr.Left(this.literal());\r\n        }\r\n        if (this.match(Token.RIGHT)) {\r\n            return new Expr.Right(this.literal());\r\n        }\r\n        throw new Error(`Expected motion keyword.`);\r\n    }\r\n    isAtEnd() {\r\n        return this.peek().type == Token.EOF;\r\n    }\r\n    advance() {\r\n        this.previous = this.current;\r\n        this.current = this.scanner.next().value;\r\n        return this.previous;\r\n    }\r\n    peek() {\r\n        return this.current;\r\n    }\r\n    consume(type, msg) {\r\n        if (this.check(type))\r\n            return this.advance();\r\n        throw new Error(msg);\r\n    }\r\n    check(type) {\r\n        if (this.isAtEnd())\r\n            return false;\r\n        return this.peek().type == Token[type];\r\n    }\r\n    match(type) {\r\n        if (this.check(type)) {\r\n            this.advance();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    command() {\r\n        if (this.match(Token.REPEAT)) {\r\n            return this.repeat();\r\n        }\r\n        return this.motion();\r\n    }\r\n    parse() {\r\n        return this.command();\r\n    }\r\n    next() {\r\n        if (!this.isAtEnd()) {\r\n            return { done: false, value: this.parse() };\r\n        }\r\n        return { done: true };\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this;\r\n    }\r\n}\r\n/* fs.writeFileSync(\"output.js\", compiler.compile_iter(parser), {\r\n  encoding: \"utf8\",\r\n}); */\r\n","export class Compiler {\r\n    constructor() {\r\n        this.evaluate = this.evaluate.bind(this);\r\n        this.code = [];\r\n    }\r\n    visitLiteralExpr(expr) {\r\n        return expr.value;\r\n    }\r\n    visitRepeatExpr(expr) {\r\n        return `\r\n      for (let i = 0; i < ${this.evaluate(expr.times)}; i++) {\r\n        ${expr.movements.map(this.evaluate).join(\"\\n\")}\r\n      }\\n\r\n    `;\r\n    }\r\n    visitForwardExpr(expr) {\r\n        return `\r\n      ctx.lineTo(${this.evaluate(expr.distance)}, 0);\r\n      ctx.translate(${this.evaluate(expr.distance)}, 0);\r\n    `;\r\n    }\r\n    visitRightExpr(expr) {\r\n        return `\r\n      ctx.rotate(${this.evaluate(expr.distance)} * Math.PI / 180);\r\n    `;\r\n    }\r\n    visitLeftExpr(expr) {\r\n        return `ctx.rotate(-${this.evaluate(expr.distance)} * Math.PI / 180);`;\r\n    }\r\n    evaluate(expr) {\r\n        return expr.accept(this);\r\n    }\r\n    compile_iter(parser) {\r\n        for (const expr of parser) {\r\n            this.code.push(this.evaluate(expr));\r\n        }\r\n        return `\r\n      export default function draw(ctx) { \r\n        ${this.code.join(\"\\n\")}\\n\r\n      }\r\n  `;\r\n    }\r\n}\r\n","import { Token } from \"./token.js\";\r\nfunction return_iter(value) {\r\n    return { done: false, value };\r\n}\r\nfunction create_token(type, value) {\r\n    return {\r\n        type,\r\n        value,\r\n    };\r\n}\r\nexport class Scanner {\r\n    constructor(input) {\r\n        this.source = input.replace(/\\s/g, \"\");\r\n        this.current = 0;\r\n        this.start = 0;\r\n        this.reserved = new Map();\r\n        this.reserved.set(\"repeat\", Token.REPEAT);\r\n        this.reserved.set(\"forward\", Token.FORWARD);\r\n        this.reserved.set(\"right\", Token.RIGHT);\r\n        this.reserved.set(\"left\", Token.LEFT);\r\n    }\r\n    next() {\r\n        this.start = this.current;\r\n        if (this.isAtEnd()) {\r\n            return { done: true, value: create_token(Token.EOF) };\r\n        }\r\n        const char = this.advance();\r\n        if (this.is_alpha(char)) {\r\n            return return_iter(this.keyword());\r\n        }\r\n        if (this.is_numeric(char)) {\r\n            return return_iter(this.number());\r\n        }\r\n        switch (char) {\r\n            case \"(\":\r\n                return return_iter(create_token(Token.OB));\r\n            case \")\":\r\n                return return_iter(create_token(Token.CB));\r\n        }\r\n        return return_iter(create_token(Token.ERROR, `Unexpected token: ${char}.`));\r\n    }\r\n    is_alpha(char) {\r\n        return /[a-zA-Z]/.test(char);\r\n    }\r\n    is_numeric(char) {\r\n        return /[0-9]/.test(char);\r\n    }\r\n    is_reserved(char) {\r\n        return this.reserved.has(char);\r\n    }\r\n    current_slice() {\r\n        return this.source.slice(this.start, this.current);\r\n    }\r\n    peek() {\r\n        return this.source.charAt(this.current);\r\n    }\r\n    keyword() {\r\n        while (this.is_alpha(this.peek())) {\r\n            this.advance();\r\n        }\r\n        const slice = this.current_slice();\r\n        if (this.is_reserved(slice)) {\r\n            return create_token(this.reserved.get(slice), slice);\r\n        }\r\n        return create_token(Token.ERROR, `Unexpected token: ${this.current_slice()}`);\r\n    }\r\n    number() {\r\n        while (this.is_numeric(this.peek())) {\r\n            this.advance();\r\n        }\r\n        return create_token(Token.LITERAL, this.current_slice());\r\n    }\r\n    isAtEnd() {\r\n        return this.current >= this.source.length;\r\n    }\r\n    advance() {\r\n        this.current += 1;\r\n        return this.source.charAt(this.current - 1);\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this;\r\n    }\r\n}\r\n",null],"names":["Expr.Repeat","Expr.Literal","Expr.Forward","Expr.Left","Expr.Right"],"mappings":"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"}